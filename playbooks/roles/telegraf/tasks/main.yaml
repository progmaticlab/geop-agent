---

- name: install curl
  package:
    name: curl
    state: present

- name: get influxdb.key
  shell: curl -s https://repos.influxdata.com/influxdb.key | sudo apt-key add -
  when: ansible_os_family == "Debian"

- name: create influxdb.list
  shell: echo "deb https://repos.influxdata.com/ubuntu focal stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
  when: ansible_os_family == "Debian"

- name: Update packages
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Update packages
  yum:
    update_cache: yes
  when: ansible_os_family == "RedHat"

- name: Update nss
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - nss
    - curl
    - libcurl
  when: ansible_os_family == "RedHat"

- name: Add repository
  copy:
    src: influxdb.repo
    dest: /etc/yum.repos.d/influxdb.repo
  when: ansible_os_family == "RedHat"

- name: install influxdb
  package:
    name: influxdb
    state: present

- name: restart influxdb
  ansible.builtin.systemd:
    state: started
    daemon_reload: yes 
    name: influxdb

- name: Create types.db directory
  ansible.builtin.file:
    path: /usr/share/collectd
    state: directory

- name: Create types.db
  ansible.builtin.file:
    path: /usr/share/collectd/types.db
    state: touch

- name: add types into types.db
  blockinfile:
    path: /usr/share/collectd/types.db
    block: "{{ lookup('file', 'types.db') }}"
    marker: "# ANSIBLE MANAGED BLOCK"

- name: install telegraf
  package:
    name: telegraf
    state: present

- name: create telegraf.conf
  template:
    src: roles/telegraf/templates/telegraf.j2
    dest: /etc/telegraf/telegraf.conf

- name: create /opt/telegraf_plugins
  ansible.builtin.file:
    path: /opt/telegraf_plugins
    state: directory
    mode: '0755'

- name: create mcs.py plugin
  copy:
    src: mcs.py
    dest: /opt/telegraf_plugins/mcs.py

- name: restart telegraf
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: telegraf


